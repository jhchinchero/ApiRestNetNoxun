// <auto-generated />
using System;
using ApiRestNetNoxun.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiRestNetNoxun.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250622002205_InitialCreateV2")]
    partial class InitialCreateV2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApiRestNetNoxun.Models.DataSet", b =>
                {
                    b.Property<int>("DataSetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DataSetName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FieldID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProcedureID")
                        .HasColumnType("int");

                    b.HasKey("DataSetID");

                    b.HasIndex("FieldID");

                    b.HasIndex("ProcedureID");

                    b.ToTable("DataSets");
                });

            modelBuilder.Entity("ApiRestNetNoxun.Models.Field", b =>
                {
                    b.Property<int>("FieldID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("FieldID");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("ApiRestNetNoxun.Models.Procedure", b =>
                {
                    b.Property<int>("ProcedureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedByUserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("LastModifiedUserID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ProcedureName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProcedureID");

                    b.HasIndex("CreatedByUserID");

                    b.HasIndex("LastModifiedUserID");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("ApiRestNetNoxun.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ApiRestNetNoxun.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ApiRestNetNoxun.Models.UserRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("ApiRestNetNoxun.Models.DataSet", b =>
                {
                    b.HasOne("ApiRestNetNoxun.Models.Field", "Field")
                        .WithMany("DataSets")
                        .HasForeignKey("FieldID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiRestNetNoxun.Models.Procedure", "Procedure")
                        .WithMany("DataSets")
                        .HasForeignKey("ProcedureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("Procedure");
                });

            modelBuilder.Entity("ApiRestNetNoxun.Models.Procedure", b =>
                {
                    b.HasOne("ApiRestNetNoxun.Models.User", "CreatedByUser")
                        .WithMany("ProceduresCreated")
                        .HasForeignKey("CreatedByUserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiRestNetNoxun.Models.User", "LastModifiedUser")
                        .WithMany("ProceduresModified")
                        .HasForeignKey("LastModifiedUserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedUser");
                });

            modelBuilder.Entity("ApiRestNetNoxun.Models.UserRole", b =>
                {
                    b.HasOne("ApiRestNetNoxun.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiRestNetNoxun.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApiRestNetNoxun.Models.Field", b =>
                {
                    b.Navigation("DataSets");
                });

            modelBuilder.Entity("ApiRestNetNoxun.Models.Procedure", b =>
                {
                    b.Navigation("DataSets");
                });

            modelBuilder.Entity("ApiRestNetNoxun.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ApiRestNetNoxun.Models.User", b =>
                {
                    b.Navigation("ProceduresCreated");

                    b.Navigation("ProceduresModified");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
